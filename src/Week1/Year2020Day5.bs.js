// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_int32 = require("rescript/lib/js/caml_int32.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_splice_call = require("rescript/lib/js/caml_splice_call.js");

function convertSeatIdStringToBinaryNumberArr(arr) {
  return Belt_Array.map(Array.from(arr), (function (character) {
                switch (character) {
                  case "F" :
                  case "L" :
                      return "0";
                  default:
                    return "1";
                }
              }));
}

var sortedSeatIds = Belt_Array.map(Belt_Array.map(Belt_Array.map(Fs.readFileSync("input/Week1/Year2020Day5.sample.txt", "utf8").split("\n"), convertSeatIdStringToBinaryNumberArr), (function (seatIdArr) {
              return Caml_splice_call.spliceObjApply("", "concat", [seatIdArr]);
            })), (function (binaryNumber) {
          return parseInt(binaryNumber, 2);
        })).sort(function (n1, n2) {
      return n2 - n1 | 0;
    });

console.log(Belt_Array.get(sortedSeatIds, 0));

function compareSeatId(param) {
  var prevIndexSeatId = param[1];
  var seatId = param[0];
  if (seatId !== undefined && prevIndexSeatId !== undefined && Caml_int32.mod_(seatId, prevIndexSeatId) > 1) {
    return seatId;
  }
  
}

var findMissingSeatIdPair = Belt_Array.keepMap(Belt_Array.mapWithIndex(sortedSeatIds, (function (i, param) {
            return [
                    Belt_Array.get(sortedSeatIds, i),
                    Belt_Array.get(sortedSeatIds, i + 1 | 0)
                  ];
          })), compareSeatId);

console.log(Belt_Option.mapWithDefault(Belt_Array.get(findMissingSeatIdPair, 0), 0, (function (id) {
            return id - 1 | 0;
          })));

var highestSeatID;

var mySeatNumber;

exports.convertSeatIdStringToBinaryNumberArr = convertSeatIdStringToBinaryNumberArr;
exports.sortedSeatIds = sortedSeatIds;
exports.highestSeatID = highestSeatID;
exports.compareSeatId = compareSeatId;
exports.findMissingSeatIdPair = findMissingSeatIdPair;
exports.mySeatNumber = mySeatNumber;
/* sortedSeatIds Not a pure module */
